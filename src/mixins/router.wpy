<script>
  import wepy from 'wepy';
  import Event from '../utils/Event';
  import Tips from '../utils/Tips';
  import api from '../api/goods';
  /**
   * 分页通用方法
   */
  export default class router extends wepy.mixin {
    config = {};
    components = {};
    /**
     * 直接购买商品
     */
    buy(goods) {
      // 只能在SLIDER模式下触发，否则会降级为购物车购买
      let source = this.$root.$wxpage.route;
      let action = 'buy';
      Event.emit(Event.GOODS_PANEL_OPEN, {
        goods,
        source,
        action
      });
    }
    /**
     * 拼团
     */
    group(goods, details, id, state, groupId) {
      // 只能在SLIDER模式下触发，否则会降级为购物车购买
      // 处理规格替换拼团价格
      goods.ruleId = id;
      goods.groupId = groupId;
      if (goods.goodsSkuInfo && details) {
        let originDetails = goods.goodsSkuInfo.goodsSkuDetails;
        originDetails.forEach(detail => {
          let { sku, goodsSkuDetailBase: base } = detail;
          let groupDetail = details.find(item => item.sku === sku);
          if (groupDetail) base.price = groupDetail.price;
          else console.warn(`[group] can not find group price, sku=${sku}`);
          // 重新计算标签
          api._processGoodsPriceRange(goods);
          api._processGoodsPriceLabel(goods);
        })
      }
      let source = this.$root.$wxpage.route;
      let action = state;
      Event.emit(Event.GOODS_PANEL_OPEN, { goods, source, action });
    }
    /**
     * 砍价
     */
    bargain(goods, ruleId, state, id) {
      // 只能在SLIDER模式下触发，否则会降级为购物车购买
      // 处理规格替换拼团价格
      goods.ruleId = ruleId;
      goods.id = id;
      let source = this.$root.$wxpage.route;
      let action = state;
      Event.emit(Event.GOODS_PANEL_OPEN, { goods, source, action });
    }
    /**
     * 加入购物车
     */
    plusCart(goods, goodsSku = '') {
      let source = this.$root.$wxpage.route;
      let mode = this.getMode(goods);
      let action = 'cart';
      console.info(`[router] goodId=${goods.id},source=${source}, action=${action}`);
      switch (mode) {
        case 'SLIDER':
          Event.emit(Event.GOODS_PANEL_OPEN, { goods, source, action });
          break;
        case 'POPUP':
          Event.emit(Event.GOODS_PANEL_PLUS, { goods, goodsSku, source });
          break;
        default:
          Event.emit(Event.GOODS_PANEL_PLUS, { goods, goodsSku, source });
      }
    }
    minusCart(goodsId, goodsSku = '') {
      let source = this.$root.$wxpage.route;
      console.info(`[router] goodId=${goodsId},source=${source}`);
      Event.emit(Event.GOODS_PANEL_MINUS, { goodsId, goodsSku, source });
    }
    getMode(goods) {
      if (goods.skuMode) return goods.skuMode;
      try {
        return this.$root.$data.buyPanelType;
      } catch (e) {
        return null;
      }
    }
    /**
     * 判断是否为TAB
     */
    isTab() {
      return wepy.$instance.globalData.shopType === 1;
    }
    /**
     * 处理跳转到商品详情
     */
    routeToCart() {
      this.$root.$switch(`/pages/goods/cart`);
    }
    /**
     * 跳转到分类购物
     */
    routeToIndex() {
      this.isTab ? this.$root.$switch(`/pages/goods/category`) : this.$root.$navigate(`/pages/shop/index`);
    }
    /**
     * 跳转到首页
     */
    routeToHome() {
      this.isTab() ? this.$root.$switch(`/pages/home/template`) : this.$root.$navigate(`/pages/home/home`);
    }
    /**
     * 跳转到用户页面
     */
    routeToCustomer() {
      this.isTab() ? this.$root.$switch(`/pages/customer/index`) : this.$root.$navigate(`/pages/customer/index`);
    }
    methods = {
      routeToCart() {
        this.routeToCart();
      },
      routeToHome() {
        this.routeToHome();
      },
      routeToCustomer() {
        this.roureCustomer();
      },
      routeToIndex() {
        this.routeToIndex();
      },
      /**
       * 处理移除购物车事件
       */
      handleMinusCart(goods) {
        this.minusCart(goods);
      },
      /**
       * 处理加入购物车事件
       */
      handlePlusCart(goods) {
        this.plusCart(goods);
      },
      /**
       * 处理加入购物车事件
       */
      handleBuy(goods) {
        this.buy(goods);
      },
      /**
       * 处理拼团事件
       */
      handleGroup(goods, detail, id, state, groupId) {
        this.group(goods, detail, id, state, groupId);
      },
      /**
       * 处理砍价事件
       */
      handleBargain(goods, ruleId, state, id) {
        this.bargain(goods, ruleId, state, id);
      },
      /**
       * 处理跳转到购物车页面
       */
      routeToGoods(goodsId) {
        this.$root.$navigate(`/pages/goods/detail?goodsId=${goodsId}`);
      },
      /**
       * 处理图片点击事件
       */
      routeByAction(event) {
        let { action, targetId } = event;
        console.info(`[router] handle action=${action}, targetId=${targetId}`);
        // 根据动作进行路由
        switch (action) {
          case 'NONE':
            // 无动作
            break;
          case 'NO_OPEN':
            Tips.success(targetId != null ? targetId : '敬请期待');
            break;
          case 'DEBUG':
            console.info('[router] debug action', event); // 调试
            break;
          case 'PAGE_NAVIGATE':
            this.$root.$navigate(targetId); // 跳转指定页面
            break;
          case 'PAGE_REDIRECT':
            this.$root.$redirect(targetId); // 跳转指定页面
            break;
          case 'PAGE_SWITCH':
            this.$root.$switch(targetId); // 跳转指定页面
            break;
          case 'PAGE_BACK':
            wepy.navigateBack(); // 跳转指定页面
            break;
          case 'GOODS':
            this.$root.$navigate(`/pages/goods/detail?goodsId=${targetId}`); // 某个商品
            break;
          case 'CATEGORY':
            this.$root.$navigate(`/pages/goods/search_list?categoryId=${targetId}`); // 某个分类
            break;
          case 'HOME':
            this.routeToHome(); // 首页
            break;
          case 'USER':
            this.$root.$switch('/pages/customer/index_template'); // 用户首页
            break;
          case 'GOODS_ALL':
            this.routeToIndex(); // 商品首页
            break;
          case 'GOODS_SEARCH':
            // 商品检索
            let { categoryId, sort, by, content } = targetId;
            let url = `/pages/goods/search_list?`;
            if (categoryId) url += `&categoryId=${categoryId}`;
            if (sort) url += `&sort=${sort}`;
            if (by) url += `&by=${by}`;
            if (content) url += `&keyword=${content}`;
            this.$root.$navigate(url);
            break;
          case 'MEMBER_SIGN':
            this.$root.$navigate('/pages/customer/sign_in'); // 签到打卡
            break;
          case 'COUPON_OWN':
            this.$root.$navigate('/pages/coupon/list'); // 我的优惠券
            break;
          case 'COUPON_PICK':
            this.$root.$navigate('/pages/coupon/pick'); // 领取优惠券
            break;
          case 'FAVORITE':
            this.$root.$navigate('/pages/goods/favorite'); // 我的收藏
            break;
          case 'ADDRESS':
            this.$root.$navigate('/pages/customer/address_list'); // 我的地址
            break;
          case 'COMMENT_LIST':
            this.$root.$navigate('/pages/customer/comment_list'); // 我的评论
            break;
          case 'MEMBER_DETAIL':
            this.$root.$navigate('/pages/customer/vip_detail'); // 会员详情
            break;
          case 'MEMBER_CODE':
            this.$root.$navigate('/pages/customer/vip_info'); // 会员码
            break;
          case 'MEMBER_BONUS':
            this.$root.$navigate('/pages/customer/bonus_list'); // 会员积分
            break;
          case 'TOP_UP':
            this.$root.$navigate('/pages/customer/balance'); // 会员充值
            break;
          case 'ORDER_LIST':
            this.$root.$navigate('/pages/order/list'); // 会员充值
            break;
          case 'PHONE':
            wepy.makePhoneCall({ phoneNumber: `${targetId}` }); // 拨打电话
            break;
          case 'SHARE':
            wepy.showShareMenu(); // 分享好友
            break;
          case 'MEMBER_REGIST':
            this.routeToCustomer(); // 注册会员
            break;
          case 'OFFLINE_PAYMENT':
            this.$root.$navigate('/pages/shop/pay'); // 离线支付
            break;
          case 'TEMPLATE':
            this.$root.$navigate(`/pages/home/template?pageId=${targetId}`); // 模板页面
            break;
          case 'SHOP_INFO':
            this.$root.$navigate(`/pages/shop/about_us`); // 店铺信息
            break;
          default:
            console.info(`[router] unsupport action=${action}, targetId=${targetId}`); // 默认没有找到地址
        }
      }
    };
    events = {};
  }
</script>
